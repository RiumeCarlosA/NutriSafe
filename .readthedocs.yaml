deploy:
  - server_dns:
      - install_bind:
          commands:
            - sudo apt update
            - sudo apt install bind9
      - configure_zone_files:
          path: /etc/bind
          filename: db.riume.com.br
          contents: |
            $TTL    604800
            @       IN      SOA     ns.riume.com.br admin.riume.com.br (
                                  3         ; Serial
                               604800         ; Refresh
                                86400         ; Retry
                              2419200         ; Expire
                               604800 )       ; Negative Cache TTL
            ;
            @       IN      NS      ns.riume.com.br
            ns      IN      A       192.168.29.2
            nutrisafe      IN      A       192.168.29.130
            nutrisafe-back IN      A       192.168.29.130
            database       IN      A       192.168.29.150
            load-balancer  IN      A       192.168.29.100
      - edit_main_config_file:
          path: /etc/bind/named.conf.local
          content: |
            zone "riume.com.br" {
                type master;
                file "/etc/bind/db.riume.com.br";
            }
      - restart_bind_service:
          command: sudo systemctl restart bind9

  - creating_api_gateway_with_haproxy:
      - configure_haproxy_cfg:
          path: /usr/local/etc/haproxy
          filename: haproxy.cfg
          contents: |
            global
              maxconn 20480

            defaults
              mode http
              timeout connect 4s
              timeout client 20s
              timeout server 3m

            frontend http-in
              bind *:80
              mode http
              use_backend nutrisafe_backend if { hdr(host) -i nutrisafe-back.riume.com.br }
              use_backend nutrisafe_frontend if { hdr(host) -i nutrisafe.riume.com.br }

            backend nutrisafe_backend
              mode http
              server app1 192.168.29.130:3000 check

            backend nutrisafe_frontend
              mode http
              server app2 192.168.29.130:80 check

            ############ database ################

            frontend in-database
              timeout client 95s
              mode tcp
              bind *:5432
              default_backend out-database

            backend out-database
              mode tcp
              server 192.168.29.150:5432 check fall 3 rise 2
      - docker_compose_creation:
          version: '3'
          services:
            elb:
              image: haproxy
              ports:
                - "80:80"
                - "443:443"
                - "5432:5432"
                - "3000:3000"
              volumes:
                - /usr/local/etc/haproxy:/usr/local/etc/haproxy

  - configuring_ssl_certificate:
      - install_certbot:
          commands:
            - sudo snap install --classic certbot
            - sudo ln -s /snap/bin/certbot /usr/bin/certbot
            - sudo snap set certbot trust-plugin-with-root=ok
            - sudo snap install certbot-dns-route53
      - configure_aws_credentials:
          path: ~/.aws/config
      - run_and_configure_automatic_renewal:
          script_path: /root/certbotRenew.sh
          commands:
            - certbot certonly --dns-route53 -d *.riume.com.br -d riume.com.br --deploy-hook /root/certbotRenew.sh
      - add_ssl_certificate_to_haproxy_cfg:
          frontend_in_https:
            bind: "*:443 ssl crt /usr/local/etc/haproxy/fullchain.pem"
            backends:
              - use_backend nutrisafe_backend if { hdr(host) -i nutrisafe-back.riume.com.br }
              - use_backend nutrisafe_frontend if { hdr(host) -i nutrisafe.riume.com.br }
      - execute_docker_compose:
          command: docker-compose up
    - configuring_database:
      - install_postgres:
          command: sudo apt install postgresql postgresql-contrib
      - configure_database:
          steps:
            - switch_user:
                user: postgres
            - create_user_and_database:
                commands:
                  - psql -c "CREATE ROLE meu_usuario WITH LOGIN PASSWORD 'senha_secreta';"
                  - psql -c "ALTER ROLE meu_usuario CREATEDB;"
            - create_database:
                command: psql -c "CREATE DATABASE nutri_safe;"
  - configuring_application_server:
      - setup_frontend_and_backend:
          - installation:
              command: sudo apt install nginx git nodejs
          - clone_repositories:
              commands:
                - git clone https://github.com/NutriSafeTeam/NutriSave-Frontend.git
                - git clone https://github.com/NutriSafeTeam/NutriSave-Backend.git
          - configure_projects:
              steps:
                - frontend:
                    path: NutriSave-Frontend
                    build_command: ng build
                    nginx_setup:
                      file_path: /etc/nginx/sites-available/nutrisafe.conf
                      configuration: |
                        server {
                            listen 80;
                            server_name nutrisafe.riume.com.br;
                            root ~/NutriSave-Frontend/dist/NutriSave-Frontend;
                            index index.html index.html;
                            location / {
                                try_files $uri $uri/ /index.html;
                            }
                        }
                    enable_site:
                      command: sudo ln -s /etc/nginx/sites-available/nutrisafe.conf /etc/nginx/sites-enabled/
                    restart_nginx:
                      command: sudo systemctl reload nginx
                - backend:
                    path: NutriSave-Backend
                    setup_environment_file:
                      file_path: .env
                      contents: |
                        DATABASE_HOST=database.riume.com.br
                        DATABASE_PORT=5432
                        DATABASE_USERNAME=meu_usuario
                        DATABASE_PASSWORD=senha_secreta
                        DATABASE=nutri_safe
                    build_and_run:
                      steps:
                        - build_project:
                            command: npm build
                        - run_project:
                            command: node ~/NutriSave-Backend/dist/Main
